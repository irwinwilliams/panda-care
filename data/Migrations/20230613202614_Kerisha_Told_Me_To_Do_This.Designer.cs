// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data;

#nullable disable

namespace data.Migrations
{
    [DbContext(typeof(PandaCareContext))]
    [Migration("20230613202614_Kerisha_Told_Me_To_Do_This")]
    partial class Kerisha_Told_Me_To_Do_This
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("data.Child", b =>
                {
                    b.Property<int>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("childId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChildId"));

                    b.Property<string>("ChildName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("childName");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("MedicalConditions")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("medicalConditions");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("ChildId")
                        .HasName("PK__Children__223925CDAC2B524B");

                    b.HasIndex("ParentId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("data.ConversationalReference", b =>
                {
                    b.Property<int>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("referenceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferenceId"));

                    b.Property<string>("ConversationReference")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("conversationReference");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parentId");

                    b.HasKey("ReferenceId")
                        .HasName("PK__Conversa__7B826DDE3965AD9D");

                    b.HasIndex("ParentId");

                    b.ToTable("ConversationalReferences");
                });

            modelBuilder.Entity("data.DailyUpdate", b =>
                {
                    b.Property<int>("UpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("updateId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UpdateId"));

                    b.Property<int?>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("childId");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("comments");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeOfDay")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("timeOfDay");

                    b.Property<string>("UpdateType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("updateType");

                    b.HasKey("UpdateId")
                        .HasName("PK__DailyUpd__3C748E7AD01BC7C0");

                    b.HasIndex("ChildId");

                    b.ToTable("DailyUpdates");
                });

            modelBuilder.Entity("data.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("parentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("ParentName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("parentName");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("ParentId")
                        .HasName("PK__Parents__90658C989A628808");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("data.Child", b =>
                {
                    b.HasOne("data.Parent", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("data.ConversationalReference", b =>
                {
                    b.HasOne("data.Parent", "Parent")
                        .WithMany("ConversationalReferences")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__Conversat__paren__60A75C0F");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("data.DailyUpdate", b =>
                {
                    b.HasOne("data.Child", "Child")
                        .WithMany("DailyUpdates")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK__DailyUpda__child__6383C8BA");

                    b.Navigation("Child");
                });

            modelBuilder.Entity("data.Child", b =>
                {
                    b.Navigation("DailyUpdates");
                });

            modelBuilder.Entity("data.Parent", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ConversationalReferences");
                });
#pragma warning restore 612, 618
        }
    }
}
